class Solution {
    public boolean possible(int[] nums,int mid,int m,int k){
        int noB=0;
        int cnt =0;
        int n = nums.length;
        for(int i=0;i<n;i++){
            if(nums[i]<=mid){
                cnt++;
            }
            else{
                noB += (cnt/k);
                cnt=0;
            }
        }
        noB += (cnt/k);
        return noB >=m;
    }
    public int minDays(int[] bloomDay, int m, int k) {
        int n = bloomDay.length;
        long val = (long) m*k;
        if(val > (long) n ) return -1;
        int maxi = Integer.MIN_VALUE;
        int mini = Integer.MAX_VALUE;

        for(int i=0;i<n;i++){
            maxi = Math.max(maxi, bloomDay[i]);
            mini = Math.min(mini , bloomDay[i]);
        }
        int low =mini;
        int high = maxi;

        while(low<=high){
            int mid = (low+high)/2;

            if(possible(bloomDay,mid,m,k)){
                high = mid-1;
            }else{
                low =mid+1;
            }
        }
        return low;
    }
}

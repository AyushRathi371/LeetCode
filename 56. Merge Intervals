class Solution {
    public int[][] merge(int[][] intervals) {
        int n= intervals.length;
        Arrays.sort(intervals, (a, b) -> {
    if (a[0] != b[0]) {
        return Integer.compare(a[0], b[0]); 
    } else {
        return Integer.compare(a[1], b[1]); 
    }
});
        List<List<Integer>> ans = new ArrayList<>();

        for(int i=0;i<n;i++){
            if(ans.isEmpty() || intervals[i][0]> ans.get(ans.size()-1).get(1) ){
                ans.add(Arrays.asList(intervals[i][0],intervals[i][1]));
            }
            else{
                int lastIndex = ans.size()-1;
                int mergedEnd = Math.max(ans.get(lastIndex).get(1),intervals[i][1]);
                ans.get(lastIndex).set(1,mergedEnd);
            }
        }
        int[][] arr = new int[ans.size()][2];
        for(int i=0;i<ans.size();i++){
            arr[i][0]=ans.get(i).get(0);
            arr[i][1]= ans.get(i).get(1);
        }
        return arr;
    }
}

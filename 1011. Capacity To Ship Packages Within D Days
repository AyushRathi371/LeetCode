class Solution {

    public boolean possible(int[] nums,int mid ,int days){
        int sum =0;
        int cnt=0;
        int n = nums.length;
        for(int i=0;i<n;i++){
            if(nums[i]>mid) return false;
            sum += nums[i];
            if(sum >mid){
                cnt ++;
                sum =0;
                sum +=nums[i];
            }
        }
        if(sum !=0){
            cnt++;
        }
        return  cnt<=days; 
    }
    public int shipWithinDays(int[] weights, int days) {
        int n =weights.length;
        int sum =0; 
        for(int i=0;i<n;i++){
            sum +=weights[i];
        }
        int low =1;
        int high =sum;
        while(low<=high){
            int mid = (low+high)/2;

            if(possible(weights,mid,days)){
                high = mid-1;
            }else {
                low =mid+1;
            }
        }
        return low;
    }
}

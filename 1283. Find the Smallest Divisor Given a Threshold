class Solution {
    public boolean possible(int[] nums,int divisor,int threshold){
        int n = nums.length;
        double sum =0;
        double d= divisor;

        for(int i=0;i<n;i++){
            double  x= nums[i];
            sum +=  Math.ceil(x/d);
        }
        return sum <= threshold;
    }

    public int smallestDivisor(int[] nums, int threshold) {
        int n = nums.length;
        int maxi =Integer.MIN_VALUE;
        

        for(int i=0;i<n;i++){
            maxi = Math.max(maxi,nums[i]);
        }
        int low = 1;
        int high = maxi;

        while(low<= high){
            int mid = (low+high)/2;

            if(possible(nums,mid,threshold)){
                high =mid-1;
            }else{
                low =mid+1;
            }
        }
        return low;
    }
}
